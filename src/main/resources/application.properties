server.port=7070
server.servlet.context-path=/sharding/

spring.main.allow-bean-definition-overriding=true

# 配置真实数据源,设置名称为ds0,ds1
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://118.89.113.147:3306/sharding_db0?characterEncoding=utf8&useUnicode=true&serverTimezone=CTT
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=Team@3306

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://118.89.113.147:3306/sharding_db1?characterEncoding=utf8&useUnicode=true&serverTimezone=CTT
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=Team@3306

# 配置 t_order 表规则,因为这里面没进行分表,仅仅是分库而已
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order

# 指定数据库分片策略,约定user_id值是偶数添加到sharding_db0中，奇数添加到sharding_db1中
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{user_id % 2 }

# 指定数据表分片策略 约定user_id值是偶数添加到t_order表，如果user_id是奇数还是添加到t_order表 笑哭脸.jpg
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true